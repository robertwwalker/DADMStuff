---
title: "DADM Stuff: Files and Pins"
bibliography: "bibliography.bib"
nocite: |
     @*
author: "Robert W. Walker"
format: 
   html:
     self-contained: true
     self-contained-math: true
     code-fold: true
     code-copy: hover
     code-block-border-left: true
     df-print: paged
     embed-resources: true
     fig-format: retina
     footnotes-hover: true
     html-math-method: katex
     mainfont: Playfair Display
     toc: true
     toc-title: Navigation
     theme: simplex
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(message=FALSE, warning=FALSE)
```

This page serves principally as a file repository for files I use in Data Analysis, (Modelling), and Decision Making (GSM 5103/GSMPR 622) -- DADM.  

*NB: It also deploys what I think to be the easiest way to make the various bits of data easily available.  Though there is no context at all for this, the first note is how to create a pin for this repository.  In this case, it was largely automated by going through and reading the various file types and then writing them out given a collected list.*

```
board <- board_temp(versioned = TRUE)
# pin_write(obj, NameofPin)
board %>% pin_write(MFPerform, "MFPerform")
```

There are a number of files and file types hosted here.  All can be accessed via the following table.  In a moment, I will take some of the data files and make them particularly easy to access with R's `pins`.  It is worth noting that not everything that is here is a pin, there are a variety of different file types and pins work with `"csv", "json", "rds", "parquet", "arrow", or "qs"`.  Only the data.frame type structures are pinned here.

## A List of All Files

```{r}
library(tidyverse)
Files <- dir()
Files
```


## A Look at the Data

```{r}
library(DT)
Files.df <- data.frame(Files=Files) %>% mutate(link=paste0(paste0('<a href=',paste0("\"https://github.com/robertwwalker/DADMStuff/raw/master/",Files,"\"", sep=""),' > ', sep=""),Files,'</a>',sep=""))
datatable(Files.df, escape = FALSE)
```

I want to make these files accessible.  Apparently, the way to do this is `pins`.

I am going to put the pins on github.  The repository will be: `https://raw.githubcontent.com/robertwwalker/DADMStuff/pins/`.  Here is a list of the pins.

```{r}
#| code-fold: show
dir("pins/")
```

## How to use them?

First, we have to call `library(pins)`; I will also require the `tidyverse`.

To set this up on your own, make sure you have the two packages installed.

```
install.packages(c("pins","tidyverse"))
```

Then you will need to define `board` as the collection of pins stored here.

```{r}
#| code-fold: show
library(pins)
library(tidyverse)
board <- board_url("https://raw.githubusercontent.com/robertwwalker/DADMStuff/master/pins/")
```

Let's list the pins that are located in `board`

```{r}
#| code-fold: show
board %>% pin_list()
```

### An Aside on `pins`

The [`pins`](https://pins.rstudio.com/) package is quite neat.  To the extent that there is a limitation, it is the use of flat files.  As a result, all of the data contained herein is a single row/column data file of some form or other.  If you'd like to learn more about `pins`, the [Getting Started with `pins`](https://pins.rstudio.com/articles/pins.html) on the **RStudio** website is quite useful.

## Acquiring a pin

Acquiring a single dataset is easiest with `pin_read`.  In this case, let me create a local object called `EPL` using the "EPL" pinned data.  

```{r}
#| code-fold: show
EPL <- board %>% pin_read("EPL") 
```

## There is no difference to working with pins once they are local objects

Having grabbed it, I will plot it (to keep the club names from overlapping, I will deploy `ggrepel` on the labels.)

```{r}
#| code-fold: show
library(ggrepel)
EPL %>% 
  ggplot() + 
  aes(y=Points, x=Wage.Bill.milGBP, label=Team) + 
  geom_label_repel() + 
  theme_minimal() +
  labs(x="Wage Bill", y="Points", title="Points and Wages")
```

The process is the same for any of the pins, only renaming the object and pointing to a different "pin".


```{r}
knitr::write_bib(names(sessionInfo()$otherPkgs), file="bibliography.bib")
```

